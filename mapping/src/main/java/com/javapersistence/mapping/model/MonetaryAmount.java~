package com.javapersistence.mapping.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Currency;

/**
 * @param value The class does not need a special constructor, you can make it immutable, even with
 *              <code>final</code> fields, as your code will be the only place an instance is created.
 */
public record MonetaryAmount(BigDecimal value, Currency currency) implements Serializable {

    /*
        You should implement the <code>equals()</code> and <code>hashCode()</code>
        methods, and compare monetary amounts "by value".
     */

    /*
            You will need a <code>String</code> representation of a monetary
            amount. Implement the <code>toString()</code> method and a static method to
            create an instance from a <code>String</code>.
         */
    @Override
    public String toString() {
        return value + " " + currency;
    }

    public static MonetaryAmount fromString(String s) {
        String[] split = s.split(" ");
        return new MonetaryAmount(
                new BigDecimal(split[0]),
                Currency.getInstance(split[1])
        );
    }
}